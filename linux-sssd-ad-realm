### edit /etc/resolv.conf
search ad.lab.scape dyn.lab.scape ldap.lab.scape lds.lab.scape lab.scape
nameserver 192.168.255.5
nameserver 192.168.255.9

### install required packages
yum install sssd realmd oddjob oddjob-mkhomedir adcli samba-common samba-common-tools krb5-workstation openldap-clients policycoreutils-python -y

### configure kerberos
# /etc/krb5.conf
#
# Configuration snippets may be placed in this directory as well

includedir /etc/krb5.conf.d/
 
includedir /var/lib/sss/pubconf/krb5.include.d/
[logging]
 default = FILE:/var/log/krb5libs.log
 kdc = FILE:/var/log/krb5kdc.log
 admin_server = FILE:/var/log/kadmind.log
 
[libdefaults]
 dns_lookup_realm = false
 ticket_lifetime = 24h
 renew_lifetime = 7d
 forwardable = true
 rdns = false
 pkinit_anchors = /etc/pki/tls/certs/ca-bundle.crt
 
 default_ccache_name = KEYRING:persistent:%{uid}
 
 default_realm = AD.LAB.SCAPE
[realms]
 AD.LAB.SCAPE = {
 }
 
[domain_realm]
 
 ad.lab.scape = AD.LAB.SCAPE
 .ad.lab.scape = AD.LAB.SCAPE


### configure nsswitch
#   /etc/nsswitch.conf
#
# /etc/nsswitch.conf
#
# An example Name Service Switch config file. This file should be
# sorted with the most-used services at the beginning.
#
# The entry '[NOTFOUND=return]' means that the search for an
# entry should stop if the search in the previous entry turned
# up nothing. Note that if the search failed due to some other reason
# (like no NIS server responding) then the search continues with the
# next entry.
#
# Valid entries include:
#
#       nisplus                 Use NIS+ (NIS version 3)
#       nis                     Use NIS (NIS version 2), also called YP
#       dns                     Use DNS (Domain Name Service)
#       files                   Use the local files
#       db                      Use the local database (.db) files
#       compat                  Use NIS on compat mode
#       hesiod                  Use Hesiod for user lookups
#       [NOTFOUND=return]       Stop searching if not found so far
#
 
# To use db, put the "db" in front of "files" for entries you want to be
# looked up first in the databases
#
# Example:
#passwd:    db files nisplus nis
#shadow:    db files nisplus nis
#group:     db files nisplus nis
 
passwd:     files sss
shadow:     files sss
group:      files sss
#initgroups: files sss
 
#hosts:     db files nisplus nis dns
hosts:      files dns myhostname
 
# Example - obey only what nisplus tells us...
#services:   nisplus [NOTFOUND=return] files
#networks:   nisplus [NOTFOUND=return] files
#protocols:  nisplus [NOTFOUND=return] files
#rpc:        nisplus [NOTFOUND=return] files
#ethers:     nisplus [NOTFOUND=return] files
#netmasks:   nisplus [NOTFOUND=return] files
 
bootparams: nisplus [NOTFOUND=return] files
 
ethers:     files
netmasks:   files
networks:   files
protocols:  files
rpc:        files
services:   files sss
 
netgroup:   nisplus sss
 
publickey:  nisplus
 
automount:  files nisplus sss
aliases:    files nisplus


### Edit PAM /etc/pam.d/system-auth
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
auth        required      pam_env.so
auth        required      pam_faildelay.so delay=2000000
auth        [default=1 ignore=ignore success=ok] pam_succeed_if.so uid >= 1000 quiet
auth        [default=1 ignore=ignore success=ok] pam_localuser.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 1000 quiet_success
auth        sufficient    pam_sss.so forward_pass
auth        required      pam_deny.so
 
account     required      pam_unix.so
account     sufficient    pam_localuser.so
account     sufficient    pam_succeed_if.so uid < 1000 quiet
account     [default=bad success=ok user_unknown=ignore] pam_sss.so
account     required      pam_permit.so
 
password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=
password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok
password    sufficient    pam_sss.so use_authtok
password    required      pam_deny.so
 
session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
-session     optional      pam_systemd.so
session     optional      pam_oddjob_mkhomedir.so umask=0077
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so
session     optional      pam_sss.so

### edit /etc/sssd/sssd.conf
# chmod 600 /etc/sssd/sssd.conf
[sssd]
 
domains = ad.lab.scape
 
config_file_version = 2
 
services = nss, pam
 
[domain/ad.lab.scape]
 
ad_domain = ad.lab.scape
 
krb5_realm = AD.LAB.SCAPE
 
realmd_tags = manages-system joined-with-samba
 
cache_credentials = True
 
id_provider = ad
 
krb5_store_password_if_offline = True
 
default_shell = /bin/bash
 
ldap_id_mapping = True
 
use_fully_qualified_names = False
 
fallback_homedir = /home/%u@%d
 
access_provider = simple
 
simple_allow_groups = RootUser,NonRootUser


### on AD create two groups 
# RootUser
# NonRootUser

### append sudoers
%ad.lab.scape\\RootUser    ALL=(ALL)    ALL
%ad.lab.scape\\NonRootUser    ALL=(ALL)    !/usr/bin/su

### join linux to domain
realm join --user=Administrator ad.lab.scape -v
realm leave ad.lab.scape
realm join --user=Administrator ad.lab.scape -v

### login with new user
ssh -l labscape\\labuser1 192.168.255.110







